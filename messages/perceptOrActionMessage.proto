//This message is meant to communicate the percept generated from the game or the action selected by the general AI.  It can also be used to signal the end of game or start of a new one

message perceptOrActionMessage
{
//Stuff associated with the game
optional bytes percept = 1; //A array of bytes specifying what the general AI perceives
optional uint64 reward = 2;  //The reward that that the game decides the AI is entitled to
optional uint64 size_of_percept_in_bits = 3; //How many bits of the perception factor are to be used (so bits values that are not multiples of 8 are allowed)
optional uint64 size_of_expected_action = 4; //How many bits the action representation by the AI is suppose to be.


//Stuff associated with the AI's actions
optional bytes action = 5; //The action taken by the AI in response to the perceptions

//A sequence number that can be used to figure out 
optional uint64 sequence_number = 6;

//Field used to indicate if the agent wants to terminate the game or the game has been terminated by the game engine
optional gameState game_state= 7;

//Field used to indicate if the AI would like to teminate the game session
optional bool terminate_game_session = 8;
}

enum gameState
{
GAME_OVER = 0;
GAME_START = 1;
GAME_CONTINUE = 2;
}
